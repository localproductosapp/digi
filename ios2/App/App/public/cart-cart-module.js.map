{"version":3,"sources":["./src/app/cart/cart.page.scss","./src/app/cart/cart.page.ts","./src/app/cart/cart-routing.module.ts","./src/app/cart/cart.page.html","./src/app/cart/cart.module.ts"],"names":[],"mappings":"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","file":"cart-cart-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXJ0LnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpResponse} from '@angular/common/http';\nimport { HTTP } from '@ionic-native/http/ngx';\n\nimport { Plugins } from '@capacitor/core';\n\nimport { Stripe } from '@awesome-cordova-plugins/stripe/ngx';\n\nimport { first } from 'rxjs/operators';\nimport { IonRouterOutlet } from '@ionic/angular';\nimport { ModalController } from '@ionic/angular';\nimport { PagomodalPage } from '../pagomodal/pagomodal.page';\nimport { ApiService } from '../services/api.service';\nimport { take } from 'rxjs/operators';\nimport { ToastController } from '@ionic/angular';\nimport { NavParams,LoadingController,NavController, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.page.html',\n  styleUrls: ['./cart.page.scss'],\n})\nexport class CartPage implements OnInit {\n\n  processSheet: 'willReady' | 'Ready' = 'willReady';\n  processFlow: 'willReady' | 'Ready' | 'canConfirm' = 'willReady';\n  processApplePay: 'willReady' | 'Ready' = 'willReady';\n  processGooglePay: 'willReady' | 'Ready' = 'willReady';\n  isApplePayAvailable = false;\n  isGooglePayAvailable = false;\n\n    idUsuario\n    cart\n    valorTotal: any=0;\n\n  constructor(    private http2: HTTP, \n    private http: HttpClient,\n    private navCtrl: NavController,\n    private stripe: Stripe,\n    public routerOutlet: IonRouterOutlet,\n    public modalController: ModalController ,\n    private service: ApiService,\n\n\n    public toastController: ToastController,) { \n    // Stripe.initialize({\n    //   publishableKey: \"pk_test_51K7hlpGPfZahrmfPjpVX1KxmRtWqr3UNiqov7pO0sswLMoXRJhsceulNSjacflHABhjT5CfABaZbiCs7TNpDIpvB003866cfYb\",\n    // });\n\n\n\n  }\n\n   ngOnInit() {\n\n    let arreglo=localStorage.getItem('user')\n\n    this.idUsuario=JSON.parse(arreglo).id\n \n  }\n\n  ngAfterViewInit() {\n    this.gteCart()\n  }\n\n \n\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: PagomodalPage,\n      componentProps: {\n        'monto': this.valorTotal,\n        'cursos': this.cart\n      },\n\n    });\n    modal.onDidDismiss()\n      .then((data) => {\n        // console.log('se cerro la puta modal',data)\n        this.gteCart()\n        this.navCtrl.navigateForward(['/tabs/cursosPremiun'])\n    });\n    return await modal.present();\n}\n\n// getCartUser\n\ngteCart(){\n\n  \n  this.service.getCartUser({idUsuarioFk:this.idUsuario})\n  .then(res => {\n    // this.cateSpinner=false\n   \n    //  this.presentToast('Agregado correctamente al carrito')\n    // this.categories = JSON.parse(JSON.stringify(res)).data;\n    this.cart=res;\n    let totar=''\n    this.cart.forEach((element,index) => {\n\n       console.log(element.precioCurso)\n       let text = element.precioCurso;\n        let result = text.replace(\",\", \".\");\n\n       let precioss:number = parseFloat(result)\n\n       console.log('precios',result)\n\n       \n       totar+=precioss.toFixed(2)\n\n      \n\n      \n\n    \n      \n    });\n\n    this.valorTotal=totar\n    console.log('este es el precio',this.valorTotal)\n\n \n  }, err => {\n  //  this.cateSpinner=false\n    console.log(err);\n  });\n\n}\n\n\nasync presentToast(message) {\n  const toast = await this.toastController.create({\n    message: message,\n    duration: 3000,\n    color:'success'\n  });\n  toast.present();\n}\n\ndelete(id){\n  // deleteCartUser\n\n    this.service.deleteCartUser({id:id})\n  .then(res => {\n    // this.cateSpinner=false\n    console.log('respuesta del delete carrito',res);\n    //  this.presentToast('Agregado correctamente al carrito')\n    // this.categories = JSON.parse(JSON.stringify(res)).data;\n    // this.cart=res;\n    this.gteCart()\n    this.presentToast(JSON.parse(JSON.stringify(res)).message)\n \n  }, err => {\n  //  this.cateSpinner=false\n    console.log(err);\n  });\n}\n\n\n \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartPage } from './cart.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CartPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CartPageRoutingModule {}\n","export default \"<ion-header #header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/home\\\">Volver</ion-back-button>\\n    </ion-buttons>\\n    <img class=\\\"logo\\\" src=\\\"/assets/img/logo.png\\\">\\n    <!-- <ion-row class=\\\"ion-justify-content-center ion-text-center\\\">\\n      <ion-col size=\\\"4\\\" class=\\\"ion-text-right\\\">\\n        TV Shows\\n      </ion-col>\\n      <ion-col size=\\\"4\\\">\\n        Movies\\n      </ion-col>\\n      <ion-col size=\\\"4\\\" tappable (click)=\\\"openCategories()\\\" class=\\\"ion-text-left\\\">\\n        Categories <ion-icon name=\\\"caret-down-outline\\\"></ion-icon>\\n      </ion-col>\\n    </ion-row> -->\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" scrollEvents=\\\"true\\\" style=\\\"top: 76px;\\\">\\n\\n  <ion-list>\\n    <ion-list-header>\\n      Carrito de compras\\n    </ion-list-header>\\n\\n    <ion-item *ngFor=\\\"let carro of cart\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img [src]=\\\"carro.url_image\\\">\\n      </ion-avatar>\\n      <ion-label>\\n        <h2>{{carro.name}}</h2>\\n        <h3 style=\\\"color:red\\\">{{carro.precioCurso}} â‚¬</h3>\\n        <p>{{carro.descripcion}}</p>\\n  \\n      </ion-label>\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button (click)=\\\"delete(carro.id)\\\" >\\n          <ion-icon name=\\\"close-circle-outline\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </ion-item>\\n \\n  \\n  </ion-list>\\n\\n  <ion-list>\\n    <!-- <ion-list-header><ion-label>PaymentSheet</ion-label></ion-list-header> -->\\n    <!-- <ion-button  (click)=\\\"presentModal()\\\" style=\\\"    width: 100%;\\\" *ngIf=\\\"cart!=''\\\">Total a pagar {{valorTotal}} â‚¬</ion-button> -->\\n   \\n  </ion-list>\\n\\n  <div class=\\\"ion-padding\\\">\\n    <ion-button expand=\\\"block\\\"  (click)=\\\"presentModal()\\\" type=\\\"button\\\" *ngIf=\\\"cart!='' && valorTotal\\\" class=\\\"ion-no-margin\\\">Comprar por {{valorTotal}} â‚¬</ion-button>\\n  </div>\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CartPageRoutingModule } from './cart-routing.module';\n\nimport { CartPage } from './cart.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CartPageRoutingModule\n  ],\n  declarations: [CartPage]\n})\nexport class CartPageModule {}\n"],"sourceRoot":"webpack:///"}